{"version":3,"sources":["reportWebVitals.js","components/card.js","components/cardlist.js","components/searchbox.js","components/scroll.js","containers/app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","card","props","className","alt","src","id","name","email","cardList","robots","CardComponent","map","a","i","SearchBox","searchChange","type","placeholder","onChange","scroll","items","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","response","json","user","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCOCQ,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCMXC,EAXE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAGC,GACjC,OAAO,cAAC,EAAD,CAAeR,GAAII,EAAOI,GAAGR,GAAIC,KAAMG,EAAOI,GAAGP,KAAMC,MAAOE,EAAOI,GAAGN,OAA5DM,MAEvB,OACI,8BACCH,KCAMI,EAPG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKb,UAAU,MAAf,SACI,uBAAOA,UAAU,sCAAsCc,KAAK,SAASC,YAAY,eAAeC,SAAUH,OCKvGI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAvE,SACKJ,EAAMK,YC0CJC,G,wDAxCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACTxB,OAAQ,GACRqB,YAAa,IAJP,E,qDAQd,WAAoB,IAAD,OACfI,MAAM,8CACLxC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,UAC1B1C,MAAK,SAAA2C,GAAI,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAO1C,WAAU,IAAD,OACCC,EAAiBC,KAAKN,MAAMxB,OAAO+B,QAAO,SAACC,GAC7C,OAAOA,EAAMnC,KACRoC,cACAC,SAAS,EAAKV,MAAMH,YAAYY,kBAEzC,OAAgC,IAA7BH,KAAKN,MAAMxB,OAAOmC,OACV,4CAGH,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAjCxBO,c,MCClBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjD1D,M","file":"static/js/main.75158233.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst card = (props) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${props.id}?200x200`}></img>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default card;","import React from 'react';\r\nimport Cards from \"./card\";\r\n\r\nconst cardList = ({robots}) => {\r\n    const CardComponent = robots.map((a, i)=>{\r\n        return <Cards key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n    })\r\n    return(\r\n        <div>\r\n        {CardComponent}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default cardList;","import React from 'react'\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className=\"tc pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robot\" onChange={searchChange}></input>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst scroll = (items) => {\r\n    return(\r\n        <div style={{overflowY: \"scroll\", border: \"3px solid #0ccac4\", height: \"470px\"}}>\r\n            {items.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default scroll;","import React, { Component } from 'react'\r\nimport CardList from \"../components/cardlist\";\r\nimport SearchBox from '../components/searchbox';\r\nimport Scroll from '../components/scroll'\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(user => this.setState({ robots: user }))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter((robot) => {\r\n            return robot.name\r\n                .toLowerCase()\r\n                .includes(this.state.searchField.toLowerCase());\r\n        });\r\n        if(this.state.robots.length === 0){\r\n            return <h1>loading...</h1>\r\n        } else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./containers/app\";\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}